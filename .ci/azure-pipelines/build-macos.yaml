jobs:
  - job: osx
    displayName: macOS
    pool:
      vmImage: '$(VMIMAGE)'
    strategy:
      matrix:
        Catalina 10.15:
          VMIMAGE: 'macOS-10.15'
        Mojave 10.14:
          VMIMAGE: 'macOS-10.14'
    timeoutInMinutes: 0
    variables:
      BUILD_DIR: '$(Agent.WorkFolder)/build'
      GOOGLE_TEST_DIR: '$(Agent.WorkFolder)/googletest'
      CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi'
    steps:
      - script: |
          brew install pkg-config qt5 libpcap brewsci/science/openni
          brew install vtk --with-qt --without-python@2
          brew install --only-dependencies pcl
          git clone https://github.com/abseil/googletest.git $GOOGLE_TEST_DIR # the official endpoint changed to abseil/googletest
          cd $GOOGLE_TEST_DIR && git checkout release-1.8.1
        displayName: 'Install Dependencies'
      - script: |
          mkdir $BUILD_DIR && cd $BUILD_DIR
          # Surface switched off due to OpenGL deprecation on Mac
          cmake $(Build.SourcesDirectory) \
            -DCMAKE_BUILD_TYPE="Release" \
            -DCMAKE_OSX_SYSROOT="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" \
            -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" \
            -DGTEST_SRC_DIR="$GOOGLE_TEST_DIR/googletest" \
            -DGTEST_INCLUDE_DIR="$GOOGLE_TEST_DIR/googletest/include" \
            -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 \
            -DPCL_ONLY_CORE_POINT_TYPES=ON \
            -DBUILD_simulation=ON \
            -DBUILD_surface=OFF \
            -DBUILD_global_tests=ON \
            -DBUILD_examples=ON \
            -DBUILD_tools=ON \
            -DBUILD_apps=ON \
            -DBUILD_apps_3d_rec_framework=ON \
            -DBUILD_apps_cloud_composer=ON \
            -DBUILD_apps_in_hand_scanner=ON \
            -DBUILD_apps_modeler=ON \
            -DBUILD_apps_point_cloud_editor=ON
        displayName: 'CMake Configuration'
      - script: |
          cd $BUILD_DIR
          cmake --build . -- -j2
        displayName: 'Build Library'
      - script: cd $BUILD_DIR && cmake --build . -- tests
        displayName: 'Run Unit Tests'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'CTest'
          testResultsFiles: '**/Test*.xml'
          searchFolder: '$(Agent.WorkFolder)/build'
        condition: succeededOrFailed()


# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - .dev/docker/env/Dockerfile
    - .ci/azure-pipelines/env.yml

pr:
  paths:
    include:
    - .dev/docker/env/Dockerfile
    - .ci/azure-pipelines/env.yml

schedules:
- cron: "0 0 * * 0"
  displayName: "Sunday midnight build"
  branches:
    include:
    - master

resources:
- repo: self

variables:
  dockerHub: 'PointCloudLibrary@hub.docker.com'
  dockerHubID: "pointcloudlibrary"

jobs:
- job: BuildAndPush
  timeoutInMinutes: 360
  displayName: "Env"
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Ubuntu 16.04:
        CUDA_VERSION: 9.2
        UBUNTU_DISTRO: 16.04
        USE_CUDA: false
        VTK_VERSION: 6
        tag: 16.04
      Ubuntu 18.04:
        CUDA_VERSION: 10.2
        UBUNTU_DISTRO: 18.04
        USE_CUDA: true
        VTK_VERSION: 6
        tag: 18.04
      Ubuntu 20.04:
        CUDA_VERSION: 11
        UBUNTU_DISTRO: 20.04
        VTK_VERSION: 7
        # nvidia-cuda docker image has not been released for 20.04 yet
        USE_CUDA: ""
        tag: 20.04
  steps:
  - task: Docker@2
    displayName: "Build docker image"
    inputs:
      command: build
      arguments: |
        --no-cache
        --build-arg CUDA_VERSION=$(CUDA_VERSION)
        --build-arg UBUNTU_DISTRO=$(UBUNTU_DISTRO)
        --build-arg USE_CUDA=$(USE_CUDA)
        --build-arg VTK_VERSION=$(VTK_VERSION)
        -t $(dockerHubID)/env:$(tag)
      dockerfile: '$(Build.SourcesDirectory)/.dev/docker/env/Dockerfile'
      tags: "$(tag)"
  - script: |
      set -x
      docker run --rm -v "$(Build.SourcesDirectory)":/pcl $(dockerHubID)/env:$(tag) bash -c ' \
      mkdir /pcl/build && cd /pcl/build && \
      cmake /pcl \
        -DCMAKE_BUILD_TYPE="Release" \
        -DPCL_ONLY_CORE_POINT_TYPES=ON \
        -DBUILD_io:BOOL=OFF \
        -DBUILD_kdtree:BOOL=OFF && \
      cmake --build . -- -j2'
    displayName: 'Verify Dockerimage'
  - task: Docker@2
    displayName: "Push docker image"
    inputs:
      command: push
      containerRegistry: $(dockerHub)
      repository: $(dockerHubID)/env
      tags: "$(tag)"
      condition: and(eq(variables['Build.Repository.Name'], 'PointCloudLibrary/pcl'),
                     eq(variables['Build.SourceBranch'], 'refs/heads/master'))

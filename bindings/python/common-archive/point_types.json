[
    {"type": "include", "file": "bitset"},
    {"type": "include", "file": "pcl/memory.h"},
    {"type": "include", "file": "pcl/pcl_macros.h"},
    {"type": "include", "file": "pcl/PCLPointField.h"},
    {"type": "include", "file": "pcl/point_types.h"},
    {"type": "include", "file": "pcl/register_point_struct.h"},
    {"type": "include", "file": "boost/mpl/and.hpp"},
    {"type": "include", "file": "boost/mpl/bool.hpp"},
    {"type": "include", "file": "boost/mpl/contains.hpp"},
    {"type": "include", "file": "boost/mpl/fold.hpp"},
    {"type": "include", "file": "boost/mpl/or.hpp"},
    {"type": "include", "file": "boost/mpl/placeholders.hpp"},
    {"type": "include", "file": "boost/mpl/vector.hpp"},
    {"type": "include", "file": "Eigen/Core"},
    {"type": "include", "file": "algorithm"},
    {"type": "include", "file": "cstdint"},
    {"type": "include", "file": "ostream"},
    {"type": "include", "file": "type_traits"},
    {
        "type": "namespace",
        "identifier": "pcl",
        "members": [
            {
                "type": "alias",
                "identifier": "Array3fMap",
                "aliastype": "Eigen::Map<Eigen::Array3f>"
            },
            {
                "type": "alias",
                "identifier": "Array3fMapConst",
                "aliastype": "const Eigen::Map<const Eigen::Array3f>"
            },
            {
                "type": "alias",
                "identifier": "Array4fMap",
                "aliastype": "Eigen::Map<Eigen::Array4f, Eigen::Aligned>"
            },
            {
                "type": "alias",
                "identifier": "Array4fMapConst",
                "aliastype": "const Eigen::Map<const Eigen::Array4f, Eigen::Aligned>"
            },
            {
                "type": "alias",
                "identifier": "Vector3fMap",
                "aliastype": "Eigen::Map<Eigen::Vector3f>"
            },
            {
                "type": "alias",
                "identifier": "Vector3fMapConst",
                "aliastype": "const Eigen::Map<const Eigen::Vector3f>"
            },
            {
                "type": "alias",
                "identifier": "Vector4fMap",
                "aliastype": "Eigen::Map<Eigen::Vector4f, Eigen::Aligned>"
            },
            {
                "type": "alias",
                "identifier": "Vector4fMapConst",
                "aliastype": "const Eigen::Map<const Eigen::Vector4f, Eigen::Aligned>"
            },
            {
                "type": "alias",
                "identifier": "Vector3c",
                "aliastype": "Eigen::Matrix<std::uint8_t, 3, 1>"
            },
            {
                "type": "alias",
                "identifier": "Vector3cMap",
                "aliastype": "Eigen::Map<Vector3c>"
            },
            {
                "type": "alias",
                "identifier": "Vector3cMapConst",
                "aliastype": "const Eigen::Map<const Vector3c>"
            },
            {
                "type": "alias",
                "identifier": "Vector4c",
                "aliastype": "Eigen::Matrix<std::uint8_t, 4, 1>"
            },
            {
                "type": "alias",
                "identifier": "Vector4cMap",
                "aliastype": "Eigen::Map<Vector4c, Eigen::Aligned>"
            },
            {
                "type": "alias",
                "identifier": "Vector4cMapConst",
                "aliastype": "const Eigen::Map<const Vector4c, Eigen::Aligned>"
            },
            {
                "type": "struct",
                "identifier": "_PointXYZ",
                "members": [
                    {"type": "macro", "identifier": "PCL_ADD_POINT4D;"},
                    {"type": "macro", "identifier": "PCL_MAKE_ALIGNED_OPERATOR_NEW"}
                ]
            },
            {
                "type": "operator",
                "operatortype": "std::ostream&",
                "identifier": "<<",
                "meta": ["PCL_EXPORTS"],
                "parameters_type": ["std::ostream&", "const PointXYZ&"]
            },
            {
                "type": "struct",
                "identifier": "PointXYZ",
                "meta": ["EIGEN_ALIGN16"],
                "parent": "_PointXYZ",
                "meta_parent": ["public"],
                "members": [
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": ["const _PointXYZ &"],
                        "initializers": ["PointXYZ(p.x, p.y, p.z)"]
                    },
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": [],
                        "initializers": ["PointXYZ(0.f, 0.f, 0.f)"]
                    },
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": ["float", "float", "float"],
                        "members": [
                            {
                                "type": "statements",
                                "execute": ["x = _x", "y = _y", "z = _z", "data[3] = 1.0f"]
                            }
                        ]
                    },
                    {
                        "type": "operator",
                        "operatortype": "std::ostream&",
                        "identifier": "<<",
                        "meta": ["friend"],
                        "parameters_type": ["std::ostream&", "const PointXYZ&"]
                    },
                    {"type": "macro", "identifier": "PCL_MAKE_ALIGNED_OPERATOR_NEW"}
                ]
            },
            {
                "type": "struct",
                "identifier": "_RGB",
                "members": [
                    {"type": "macro", "identifier": "PCL_ADD_RGB;"}
                ]
            },
            {
                "type": "operator",
                "operatortype": "std::ostream&",
                "identifier": "<<",
                "meta": ["PCL_EXPORTS"],
                "parameters_type": ["std::ostream&", "const RGB&"]
            },
            {
                "type": "struct",
                "identifier": "RGB",
                "meta": [],
                "parent": "_RGB",
                "meta_parent": ["public"],
                "members": [
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": ["const _RGB"],
                        "members": [{"type": "statement", "execute": "rgba = p.rgba"}]
                    },
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": [],
                        "initializers": ["RGB(0, 0, 0)"]
                    },
                    {
                        "type": "constructor",
                        "meta": ["inline"],
                        "parameters_type": [
                            "std::uint8_t",
                            "std::uint8_t",
                            "std::uint8_t"
                        ],
                        "members": [
                            {
                                "type": "statement",
                                "execute": ["r = _r", "g = _g", "b = _b", "a = 255"]
                            }
                        ]
                    },
                    {
                        "type": "operator",
                        "operatortype": "std::ostream&",
                        "identifier": "<<",
                        "meta": ["friend"],
                        "parameters_type": ["std::ostream&", "const RGB&"]
                    }
                ]
            }
        ]
    }
]

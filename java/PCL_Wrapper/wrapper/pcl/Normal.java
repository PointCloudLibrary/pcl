/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package wrapper.pcl;

public class Normal {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Normal(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Normal obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        wrapper.pcl_moduleJNI.delete_pcl_Normal(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Normal() {
    this(wrapper.pcl_moduleJNI.new_pcl_Normal__SWIG_0(), true);
  }

  public Normal(float n_x, float n_y, float n_z) {
    this(wrapper.pcl_moduleJNI.new_pcl_Normal__SWIG_1(n_x, n_y, n_z), true);
  }

  public void setNormal_x(float value) {
    wrapper.pcl_moduleJNI.pcl_Normal_normal_x_set(swigCPtr, this, value);
  }

  public float getNormal_x() {
    return wrapper.pcl_moduleJNI.pcl_Normal_normal_x_get(swigCPtr, this);
  }

  public void setNormal_y(float value) {
    wrapper.pcl_moduleJNI.pcl_Normal_normal_y_set(swigCPtr, this, value);
  }

  public float getNormal_y() {
    return wrapper.pcl_moduleJNI.pcl_Normal_normal_y_get(swigCPtr, this);
  }

  public void setNormal_z(float value) {
    wrapper.pcl_moduleJNI.pcl_Normal_normal_z_set(swigCPtr, this, value);
  }

  public float getNormal_z() {
    return wrapper.pcl_moduleJNI.pcl_Normal_normal_z_get(swigCPtr, this);
  }

  public void setCurvature(float value) {
    wrapper.pcl_moduleJNI.pcl_Normal_curvature_set(swigCPtr, this, value);
  }

  public float getCurvature() {
    return wrapper.pcl_moduleJNI.pcl_Normal_curvature_get(swigCPtr, this);
  }

  public void setData_n(wrapper.SWIGTYPE_p_float value) {
    wrapper.pcl_moduleJNI.pcl_Normal_data_n_set(swigCPtr, this, wrapper.SWIGTYPE_p_float.getCPtr(value));
  }

  public wrapper.SWIGTYPE_p_float getData_n() {
    long cPtr = wrapper.pcl_moduleJNI.pcl_Normal_data_n_get(swigCPtr, this);
    return (cPtr == 0) ? null : new wrapper.SWIGTYPE_p_float(cPtr, false);
  }

}
